// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.GeneratedModels;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(DoctorDbContext))]
    partial class DoctorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication2.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new { IdDoctor = 1, Email = "xxx@xxx.pl", FirstName = "Jurgen", LastName = "Thorwald" },
                        new { IdDoctor = 2, Email = "xxx@xxx.pl", FirstName = "House", LastName = "Houser" }
                    );
                });

            modelBuilder.Entity("WebApplication2.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");
                });

            modelBuilder.Entity("WebApplication2.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new { IdPatient = 1, BirthDate = new DateTime(2020, 6, 27, 16, 46, 58, 965, DateTimeKind.Local), FirstName = "Ewa", LastName = "Godlewska" },
                        new { IdPatient = 2, BirthDate = new DateTime(2020, 6, 27, 16, 46, 58, 967, DateTimeKind.Local), FirstName = "Janek", LastName = "Grzelak" }
                    );
                });

            modelBuilder.Entity("WebApplication2.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DueDate");

                    b.Property<int?>("IdDoctor");

                    b.Property<int?>("IdPatient");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new { IdPrescription = 1, Date = new DateTime(2020, 6, 27, 16, 46, 58, 967, DateTimeKind.Local), DueDate = new DateTime(2020, 6, 27, 16, 46, 58, 967, DateTimeKind.Local), IdDoctor = 1, IdPatient = 1 },
                        new { IdPrescription = 2, Date = new DateTime(2020, 6, 27, 16, 46, 58, 967, DateTimeKind.Local), DueDate = new DateTime(2020, 6, 27, 16, 46, 58, 967, DateTimeKind.Local), IdDoctor = 2, IdPatient = 2 }
                    );
                });

            modelBuilder.Entity("WebApplication2.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("IdPrescriptionMedicament")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Details");

                    b.Property<int>("Dose");

                    b.Property<int?>("IdMedicament");

                    b.Property<int?>("IdPrescription");

                    b.HasKey("IdPrescriptionMedicament");

                    b.HasIndex("IdMedicament");

                    b.HasIndex("IdPrescription");

                    b.ToTable("PrescriptionMedicaments");
                });

            modelBuilder.Entity("WebApplication2.Models.Prescription", b =>
                {
                    b.HasOne("WebApplication2.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor");

                    b.HasOne("WebApplication2.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient");
                });

            modelBuilder.Entity("WebApplication2.Models.PrescriptionMedicament", b =>
                {
                    b.HasOne("WebApplication2.Models.Medicament", "Medicament")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("IdMedicament");

                    b.HasOne("WebApplication2.Models.Prescription", "Prescription")
                        .WithMany("PrescriptionMedicaments")
                        .HasForeignKey("IdPrescription");
                });
#pragma warning restore 612, 618
        }
    }
}
